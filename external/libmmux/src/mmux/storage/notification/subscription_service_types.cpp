/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "subscription_service_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace mmux { namespace storage {

int _kresponse_typeValues[] = {
  subscribe,
  unsubscribe
};
const char* _kresponse_typeNames[] = {
  "subscribe",
  "unsubscribe"
};
const std::map<int, const char*> _response_type_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kresponse_typeValues, _kresponse_typeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));

std::ostream& operator<<(std::ostream& out, const response_type val) {
  std::map<int, const char*>::const_iterator it = _response_type_VALUES_TO_NAMES.find(val);
  if (it != _response_type_VALUES_TO_NAMES.end()) {
    out << it->second;
  } else {
    out << static_cast<int>(val);
  }
  return out;
}

}} // namespace
